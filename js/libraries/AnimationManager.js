export default class AnimationManager{constructor(t=1/60){this.deltaTime=t,this._doNotTouch={lastFrame:0,accumulatedTime:0,update:t=>{for(this._doNotTouch.accumulatedTime+=(t-this._doNotTouch.lastFrame)/1e3;this._doNotTouch.accumulatedTime>this.deltaTime;)this._doNotTouch.functions.forEach(o=>o(t)),this._doNotTouch.accumulatedTime-=this.deltaTime;this._doNotTouch.intervals.forEach(o=>{o.lastTime=o.lastTime||t,t-o.lastTime>=o.time&&(o.lastTime=t,o.func())}),this._doNotTouch.timeouts.forEach(o=>{o.lastTime=o.lastTime||t,t-o.lastTime>=o.time&&(o.lastTime=t,o.func(),this.clearTimeout(o.id))}),this._doNotTouch.running&&requestAnimationFrame(this._doNotTouch.update),this._doNotTouch.lastFrame=t},running:!1,intervalID:0,timeoutID:0,functions:[],intervals:[],timeouts:[]}}start(){this._doNotTouch.running=!0,requestAnimationFrame(this._doNotTouch.update)}stop(){this._doNotTouch.running=!1,cancelAnimationFrame(this._doNotTouch.update)}get functions(){return this._doNotTouch.functions}setInterval(t,o){const i=this._doNotTouch.intervalID++;return this._doNotTouch.intervals.push({id:i,func:t,time:o}),i}clearInterval(t){this._doNotTouch.intervals.forEach((o,i)=>o.id===t&&this._doNotTouch.intervals.splice(i,1))}setTimeout(t,o){const i=this._doNotTouch.timeoutID++;return this._doNotTouch.timeouts.push({id:i,func:t,time:o}),i}clearTimeout(t){this._doNotTouch.timeouts.forEach((o,i)=>o.id===t&&this._doNotTouch.timeouts.splice(i,1))}}